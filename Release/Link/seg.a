;/*****************************************************
;This program was produced by the
;CodeWizardAVR V1.25.3 Professional
;Automatic Program Generator
;© Copyright 1998-2007 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/13/2008
;Author  : Ahmad
;Company : Farahani
;Comments:
;
;
;Chip type           : ATmega8
;Program type        : Application
;Clock frequency     : 1.000000 MHz
;Memory model        : Small
;External SRAM size  : 0
;Data Stack size     : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char q,w,r;
;unsigned char e[]={63,6,91,79,102,109,125,7,127,111};

	.DSEG
;void main(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001F DDRD=0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0020 DDRB=0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0021 DDRC=0x7F;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0022 r=2;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0023 shoro:
;PCODE: $00000016 VOL: 0
; 0000 0024 PORTC.0=1;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0025 PORTC.1=0;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0026 PORTB=e[w];
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0027 delay_ms(50);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0028 PORTC.0=0;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0029 PORTC.1=1;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002A PORTB=e[q];
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002B delay_ms(50);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 002C r=r-1;
;PCODE: $0000002F VOL: 0
; 0000 002D //sdfsdfsd
; 0000 002E if (r==0){
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002F         q=q+1;
;PCODE: $00000032 VOL: 0
; 0000 0030         r=2;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0031         }
; 0000 0032 if (q==10){
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0033         q=0;
;PCODE: $00000039 VOL: 0
; 0000 0034         w=w+1;
;PCODE: $0000003A VOL: 0
; 0000 0035      }
; 0000 0036         if (w==10){
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0037         w=0;
;PCODE: $0000003F VOL: 0
; 0000 0038         goto shoro;
;PCODE: $00000040 VOL: 0
; 0000 0039         }
; 0000 003A else goto shoro;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003B }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
